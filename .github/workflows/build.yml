name: Build Lonkorush Client

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-tauri
        run: cargo install cargo-tauri --version "^2.0.0" --locked

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            imagemagick \
            icnsutils || true

          # WebKit fallback: try 4.1, otherwise 4.0
          if ! sudo apt-get install -y libwebkit2gtk-4.1-dev; then
            sudo apt-get install -y libwebkit2gtk-4.0-dev || true
          fi
        shell: bash

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install imagemagick || true
        shell: bash

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install imagemagick --yes --force
          refreshenv || true
        shell: pwsh

      - name: Fix icons (Linux / macOS)
        if: matrix.os != 'windows-latest'
        run: |
          if command -v magick >/dev/null 2>&1; then
            magick src-tauri/icons/icon.png -define png:format=png32 src-tauri/icons/icon.png
          elif command -v convert >/dev/null 2>&1; then
            convert src-tauri/icons/icon.png -define png:format=png32 src-tauri/icons/icon.png
          fi

          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            rm -rf src-tauri/icons/mac.iconset || true
            mkdir -p src-tauri/icons/mac.iconset
            for size in 16 32 128 256 512 1024; do
              magick src-tauri/icons/icon.png -resize ${size}x${size} src-tauri/icons/mac.iconset/icon_${size}x${size}.png
            done
            iconutil -c icns src-tauri/icons/mac.iconset -o src-tauri/icons/icon.icns
          fi
        shell: bash

      - name: Fix icons (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (Get-Command magick -ErrorAction SilentlyContinue) {
            magick src-tauri/icons/icon.png -define png:format=png32 src-tauri/icons/icon.png
          } elseif (Get-Command convert -ErrorAction SilentlyContinue) {
            & convert src-tauri/icons/icon.png -define png:format=png32 src-tauri/icons/icon.png
          }
          magick src-tauri/icons/icon.png -define icon:auto-resize=256,128,64,48,32,16 src-tauri/icons/icon.ico
        shell: pwsh

      - name: Build Tauri app (Linux / macOS)
        if: matrix.os != 'windows-latest'
        run: |
          if [ -d "lonkorush-client/src-tauri" ]; then
            cd lonkorush-client/src-tauri
          elif [ -d "src-tauri" ]; then
            cd src-tauri
          fi
          cargo tauri build
        shell: bash

      - name: Build Tauri app (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          if (Test-Path lonkorush-client\src-tauri) {
            Set-Location lonkorush-client\src-tauri
          } elseif (Test-Path src-tauri) {
            Set-Location src-tauri
          }
          cargo tauri build
        shell: pwsh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lonkorush-${{ matrix.os }}
          path: |
            **/target/release/bundle/**
